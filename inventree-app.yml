---
apiVersion: v1
kind: Service
metadata:
  name: inventree-app
  namespace: inventree
  labels:
    app: inventree-app
spec:
  ports:
    - name: server
      port: 8000
      targetPort: 8000
    - name: proxy
      port: 80
      targetPort: 80
  selector:
    app: inventree-app
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: inventree-proxy
  namespace: inventree
data:
  nginx.prod.conf: |2
    server {
        listen 80;
        real_ip_header proxy_protocol;
        location / {
            proxy_set_header      Host              $http_host;
            proxy_set_header      X-Forwarded-By    $server_addr:$server_port;
            proxy_set_header      X-Forwarded-For   $remote_addr;
            proxy_set_header      X-Forwarded-Proto $scheme;
            proxy_set_header      X-Real-IP         $remote_addr;
            proxy_set_header      CLIENT_IP         $remote_addr;
            proxy_pass_request_headers on;
            proxy_redirect off;
            client_max_body_size 100M;
            proxy_buffering off;
            proxy_request_buffering off;
            # Change 'inventree-server' to the name of the inventree server container,
            # and '8000' to the INVENTREE_WEB_PORT (if not default)
            #proxy_pass http://inventree-server:8000;
            proxy_pass http://inventree-app.inventree.svc.cluster.local:8000;
        }
        location /static/ {
            alias /var/www/static/;
            autoindex on;
            expires 30d;
            add_header Pragma public;
            add_header Cache-Control "public";
        }
        location /media/ {
            alias /var/www/media/;
            auth_request /auth;
        }
        location /auth {
            internal;
            proxy_pass http://inventree-app.inventree.svc.cluster.local:8000/auth/;
            proxy_pass_request_body off;
            proxy_set_header Content-Length "";
            proxy_set_header X-Original-URI $request_uri;
        }
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: inventree-app
  namespace: inventree
  labels:
    app: inventree-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: inventree-app
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: inventree-app
    spec:
      restartPolicy: Always
      initContainers:
        - name: init-migrate
          image: docker.io/inventree/inventree:stable
          envFrom:
            - configMapRef:
                name: inventree
            - secretRef:
                name: inventree
          workingDir: /home/inventree
          command: ['python', './src/backend/InvenTree/manage.py', 'migrate']
          volumeMounts:
            - name: inventree-data      
              mountPath: /home/inventree/data
      containers:
        - name: inventree-server
          image: docker.io/inventree/inventree:stable
          envFrom:
            - configMapRef:
                name: inventree
            - secretRef:
                name: inventree
          ports:
            - containerPort: 8000
          volumeMounts:
            - name: inventree-data         
              mountPath: /home/inventree/data
            - name: inventree-data
              mountPath: /var/www/static
              subPath: static
          lifecycle:
            postStart:
              exec:
                 command:
                   - '/bin/sh'
                   - '-c'
                   - 'cp -rf /home/inventree/src/backend/InvenTree/InvenTree/static /home/inventree/data && cp -rf /home/inventree/src/backend/InvenTree/InvenTree/static_i18n/i18n /var/www/static/i18n && cp -rf /root/.local/lib/python3.11/site-packages/django/contrib/admin/static/admin /var/www/static/admin'
        - name: inventree-proxy
          image: docker.io/nginx:stable
          ports:
            - containerPort: 80
          volumeMounts:
            - name: config
              mountPath: /etc/nginx/conf.d/default.conf
              subPath: nginx.prod.conf
              readOnly: true
            - name: inventree-data                  
              mountPath: /var/www        
      volumes:
        - name: config
          configMap:
            name: inventree-proxy
        - name: inventree-data
          persistentVolumeClaim:
            claimName: inventree-data
...
